"use strict";
/**
 * Copyright (c) Microsoft Corporation.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const api = require("../api");
const helper_1 = require("../helper");
const errors_1 = require("../errors");
const deviceDescriptors_1 = require("../deviceDescriptors");
const chromium_1 = require("./chromium");
const webkit_1 = require("./webkit");
const firefox_1 = require("./firefox");
const selectors_1 = require("../selectors");
for (const className in api) {
    if (typeof api[className] === 'function')
        helper_1.helper.installApiHooks(className[0].toLowerCase() + className.substring(1), api[className]);
}
class Playwright {
    constructor(packagePath, browsers) {
        this.selectors = selectors_1.selectors;
        this.devices = deviceDescriptors_1.DeviceDescriptors;
        this.errors = { TimeoutError: errors_1.TimeoutError };
        const chromium = browsers.find(browser => browser.name === 'chromium');
        if (chromium)
            this.chromium = new chromium_1.Chromium(packagePath, chromium);
        const firefox = browsers.find(browser => browser.name === 'firefox');
        if (firefox)
            this.firefox = new firefox_1.Firefox(packagePath, firefox);
        const webkit = browsers.find(browser => browser.name === 'webkit');
        if (webkit)
            this.webkit = new webkit_1.WebKit(packagePath, webkit);
    }
}
exports.Playwright = Playwright;
//# sourceMappingURL=playwright.js.map